version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "=== INSTALL PHASE STARTED ==="
      - echo "Current directory: $(pwd)"
      - echo "Starting Docker..."
      # Install Docker Client
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - sleep 5
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - echo "Checking if Docker is running..."
      - docker info || echo "DOCKER FAILED TO START!"
  pre_build:
    commands:
      - echo "=== PRE-BUILD PHASE STARTED ==="
      - echo "Current directory: $(pwd)"
      - ls -la
      - echo "Node version: $(node -v)"
      - echo "NPM version: $(npm -v)"
      - echo "Looking for package.json..."
      - test -f package.json && echo "Found package.json" || echo "MISSING package.json"      
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Installing dependencies..."
      - npm install
  build:
    commands:
      - echo "=== BUILD PHASE STARTED ==="
      - echo "Building NestJS application..."
      - npm run build
      - echo "Build completed on $(date)"
      - echo "Building docker image..."
      - docker build -t $IMAGE_REPO_NAME .
  post_build:
    commands:
      - echo "=== POST-BUILD PHASE STARTED ==="
      - echo "Tagging Docker image..."
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - echo "Pushing Docker image to Amazon ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

artifacts:
  files:
    - '**/*'